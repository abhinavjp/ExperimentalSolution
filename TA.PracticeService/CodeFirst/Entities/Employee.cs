// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace TA.PracticeService.CodeFirst.Entities
{
    using TA.PracticeService.CodeFirst.Maps;

    // Employees
    [Table("Employees", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class Employee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.Employees", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Forename", Order = 2, TypeName = "nvarchar(max)")]
        [Display(Name = "Forename")]
        public string Forename { get; set; } // Forename

        [Column(@"Surname", Order = 3, TypeName = "nvarchar(max)")]
        [Display(Name = "Surname")]
        public string Surname { get; set; } // Surname

        [Column(@"JoiningDate", Order = 4, TypeName = "datetime")]
        [Display(Name = "Joining date")]
        public System.DateTime? JoiningDate { get; set; } // JoiningDate

        [Column(@"EndDate", Order = 5, TypeName = "datetime")]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        [Column(@"MiddleName", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; } // MiddleName

        [Column(@"PayrollId", Order = 7, TypeName = "nvarchar(max)")]
        [Display(Name = "Payroll ID")]
        public string PayrollId { get; set; } // PayrollId

        [Column(@"CreatedDepartmentId", Order = 8, TypeName = "int")]
        [Index(@"IX_Department_Id", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Created department ID")]
        public int? CreatedDepartmentId { get; set; } // CreatedDepartmentId

        [Column(@"UpdatedDepartmentId", Order = 9, TypeName = "int")]
        [Display(Name = "Updated department ID")]
        public int? UpdatedDepartmentId { get; set; } // UpdatedDepartmentId

        // Foreign keys

        /// <summary>
        /// Parent Department pointed by [Employees].([CreatedDepartmentId]) (FK_Employees_CreatedBy_User)
        /// </summary>
        [ForeignKey("CreatedDepartmentId")] public virtual Department CreatedDepartment { get; set; } // FK_Employees_CreatedBy_User

        /// <summary>
        /// Parent Department pointed by [Employees].([UpdatedDepartmentId]) (FK_Employees_UpdatedBy_User)
        /// </summary>
        [ForeignKey("UpdatedDepartmentId")] public virtual Department UpdatedDepartment { get; set; } // FK_Employees_UpdatedBy_User
    }

}
// </auto-generated>
